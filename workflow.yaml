apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  name : genome-search
  generateName: genome-search-
spec:
  entrypoint: split-search
  arguments:
    parameters:
    - name: split-file-count
      value: 10 #defines how many files to split this in to
    - name: sequence
      value: "NDVTSLISTTYPYTGPPPMSHGSSTKYT"
    - name: file
      value: influenza_xsmall.faa
  templates:
  - name: split-search
    steps:
    - - name: split-files
        template: split
    - - name: search-files
        template: search
        arguments:
          parameters:
          - name: file
            value: "{{item}}"
          artifacts:
          - name: split-files
            from: "{{steps.split-files.outputs.artifacts.split-files}}"
        withSequence:
          start: "1"
          end: "{{workflow.parameters.split-file-count}}"
    - - name: compile-results
        template: compile
        arguments:
          artifacts:
          - name: file-list
            from: "{{steps.search-files.outputs.artifacts.result}}"

  - name: split
    volumes:
      - name: files
        hostPath:
          type: FileOrCreate
          path: "/host_mnt/C/Users/--a/Documents/argoGenomeSearch/{{workflow.parameters.file}}"
    container:
      image: filesplit:latest
      args: ["-f", "{{workflow.parameters.file}}", "-s", "{{workflow.parameters.split-file-count}}"]
      imagePullPolicy: Never
      volumeMounts:
        - name: files
          mountPath: /app/{{workflow.parameters.file}}
    outputs:
      artifacts:
      - name: split-files
        path: /app

  - name: search
    inputs:
      parameters:
      - name: file
      artifacts:
      - name: split-files
        path: /app/search
    container:
      image: filesearch:latest
      imagePullPolicy: Never
      args: ["-f", "./search/small_file_{{workflow.parameters.file}}_{{inputs.parameters.file}}", "-s", "{{workflow.parameters.sequence}}"]
    outputs:
      artifacts:
      - name: result
        path: /app/result_small_file_{{workflow.parameters.file}}_{{inputs.parameters.file}}
        archive:
          none: {}

  - name: compile
    inputs:
      artifacts:
      - name: file-list
        path: /app
    container:
      image: alpine:latest
      command: [sh, -c]
      args: ["cat /app/* > /app/all.txt"]
    outputs:
      artifacts:
        - name: final
          path: /app/all.txt